#!/bin/bash
set -euo pipefail



usage="USAGE: $(basename "$0") [-s|--stage] <stage>
where:
    -s | --stage        stage for deployment (required)
    -h | --help         show this help text"

while [ $# -gt 0 ]; do
    if [[ $1 =~ "--"* ]]; then
        case $1 in
            --help|-h) echo "$usage"; exit; ;;
            --stage|-s) STAGE=$2;;
        esac
    fi
    shift
done

if [ -z "$STAGE" ]; then
  echo "$usage"; exit 1;
fi

STACK_NAME="nihongo-service-$STAGE" # TODO: Get from serverless.yml

echo "Checking required configuration is present"
./bin/configure --stage "$STAGE" --ci true

echo "Running serverless deployment"
export SERVERLESS_ACCESS_KEY=$(./bin/configure --stage "$STAGE" --key "SERVERLESS_ACCESS_KEY")
./node_modules/.bin/sls deploy --stage "$STAGE" --region us-east-1 --verbose --aws-s3-accelerate

# TODO: Remove once DataAPI can be added in cloudformation
echo "Enabling Data API on RDS"
DATABASE_CLUSTER_ID=$(aws cloudformation describe-stacks --stack-name "$STACK_NAME" --query "Stacks[0].Outputs[?OutputKey=='DatabaseClusterIdentifier'].OutputValue" --output text)
aws rds modify-db-cluster --db-cluster-identifier "$DATABASE_CLUSTER_ID" --enable-http-endpoint >/dev/null

# GraphQL
GRAPHQL_ENDPOINT=$(aws cloudformation describe-stacks --stack-name "$STACK_NAME" --query "Stacks[0].Outputs[?OutputKey=='GraphQLUrl'].OutputValue" --output text)

echo "Seeding databbase"
curl --request POST \
  --url "$GRAPHQL_ENDPOINT" \
  --header 'content-type: application/json' \
  --data '{"query":"mutation {\n  seedDatabase\n}"}'

echo "Pushing schema to apollo engine for stage: $STAGE"
APOLLO_ENGINE_API_KEY=$(./bin/configure --stage "$STAGE" --key "APOLLO_ENGINE_KEY")

echo $APOLLO_ENGINE_API_KEY

./node_modules/.bin/apollo service:push --tag="$STAGE" --key="$APOLLO_ENGINE_API_KEY" --endpoint="$GRAPHQL_ENDPOINT"