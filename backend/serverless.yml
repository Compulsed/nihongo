service:
  name: nihongo-service

provider:
  name: aws
  runtime: nodejs10.x
  stackName: ${self:service}-${self:provider.stage}
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  iamRoleStatements:
    - Effect: Allow
      Action: "*"
      Resource: "*"

custom:
  accountId: #{AWS::AccountId}
  RDS:
    name: nihongodb
    clusterIdentifier: ${self:service}-${self:provider.stage}-nihongo-aurora-cluster
  APIGateway:
    graphQL:
      path: /graphql

package:
  exclude:
    - src/**
    - node_modules/**

plugins:
  - serverless-offline

functions:
  graphql:
    handler: src/handler.handler
    timeout: 30
    events:
      - http:
          path: graphql
          method: post
          cors: true
    environment:
      SECRET_ARN:
        Ref: DatabaseSecret
      DB_ARN: arn:aws:rds:${self:provider.region}:#{AWS::AccountId}:cluster:${self:custom.RDS.clusterIdentifier}
      DATABASE_NAME: ${self:custom.RDS.name}
      APOLLO_ENGINE_KEY: ${ssm:/${self:provider.stage}-${self:service}-APOLLO_ENGINE_KEY~true}
          
resources:
  Resources:
    DatabaseSecret:
      Type: AWS::SecretsManager::Secret
      Properties:
        Description: 'This is the secret for my RDS instance'
        GenerateSecretString:
          SecretStringTemplate: '{"username": "admin"}'
          GenerateStringKey: 'password'
          PasswordLength: 16
          ExcludeCharacters: '"@/'

    DBClusterCluster:
      Type: AWS::RDS::DBCluster
      Properties:
        MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref DatabaseSecret, ':SecretString:username}}' ]]
        MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref DatabaseSecret, ':SecretString:password}}' ]]
        DatabaseName: ${self:custom.RDS.name}
        DBClusterIdentifier: ${self:custom.RDS.clusterIdentifier}
        Engine: aurora
        EngineMode: serverless
        ScalingConfiguration:
          AutoPause: true
          MaxCapacity: 16
          MinCapacity: 2
          SecondsUntilAutoPause: 3600

    SecretRDSInstanceAttachment:
      Type: AWS::SecretsManager::SecretTargetAttachment
      Properties:
        SecretId: !Ref DatabaseSecret
        TargetId: !Ref DatabaseInstance
        TargetType: AWS::RDS::DBCluster
