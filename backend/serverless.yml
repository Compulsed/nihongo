service:
  name: nihongo-service

provider:
  name: aws
  runtime: nodejs8.10
  stackName: ${self:service}-${self:provider.stage}
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  iamRoleStatements:
    - Effect: Allow
      Action: "*"
      Resource: "*"
  environment: ${file(./config/${opt:stage}.yml):config}

plugins:
  - serverless-offline

custom:
  config: ${file(./config/${opt:stage}.yml):config}

functions:
  graphql:
    handler: src/handler.handler
    timeout: 30
    events:
      - http:
          path: graphql
          method: post
          cors: true
          
resources:
  Resources:
    RDSCluster:
      Type: AWS::RDS::DBCluster
      Properties:
        MasterUsername: MasterUsername
        MasterUserPassword: MasterUserPassword
        DatabaseName: RANDOMNAME
        Engine: aurora
        EngineMode: serverless
        ScalingConfiguration:
          AutoPause: true
          MaxCapacity: 16
          MinCapacity: 2
          SecondsUntilAutoPause: 3600